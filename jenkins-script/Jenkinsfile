pipeline {
    agent any

    environment {
        VITE_APP_TITLE = 'Pickside'
        VITE_APP_AUTH_SERVICE_URL = 'https://pickside-service.com/auth-service'
        VITE_APP_FILE_SERVICE_URL = 'https://pickside-service.com/file-service'
        VITE_APP_MAIN_SERVICE_URL = 'https://pickside-service.com/api/v2'
        VITE_APP_MESSAGE_SERVICE_URL = 'https://pickside-service.com/message-service'
        VITE_APP_MESSAGE_SERVICE_SOCKET_URL = 'wss://pickside-service/message-service/ws'
        VITE_APP_NOTIFICATION_SERVICE_URL = 'https://pickside-service.com/notification-service'
    }

    stages {
        stage('Install Dependencies') {
            steps {
                script {
                    sh '''
                        # Source .bashrc to load nvm and npm
                        . ~/.bashrc

                        # Use Node.js installed by nvm
                        nvm use --lts

                        # Install project dependencies using pnpm
                        pnpm install
                    '''
                }
            }
        }

        stage('Build') {
            steps {
                script {
                     withCredentials([
                        string(credentialsId: 'google-map-api-key', variable: 'VITE_APP_GOOGLE_MAPS_API_KEY'),
                        string(credentialsId: 'google-oauth-id', variable: 'VITE_APP_GOOGLE_MAPS_OAUTH_CLIENT_ID'),
                    ]) {
                        sh '''
                            . ~/.bashrc
                            nvm use --lts
                            pnpm build
                        '''
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    withCredentials([
                        aws(credentialsId: 'aws-creds', accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')
                    ]) {
                        sh '''
                            . ~/.bashrc

                            export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
                            export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY

                            aws sts get-caller-identity
                            
                            if [ $? -eq 0 ]; then
                                echo "AWS credentials are valid."
                                echo "Syncing to S3"
                                aws s3 sync build/ s3://pickside.net/ --delete --cache-control max-age=60
                            else
                                echo "Failed to validate AWS credentials."
                                exit 1
                            fi
                        '''
                    }
                }
            }
        }

    }
}